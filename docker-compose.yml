version: "3.8"

services:
  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/genai_insights
      - REDIS_URL=redis://redis:6379
      - CLICKHOUSE_URL=clickhouse://default:changeme@clickhouse:8123/default
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
      - clickhouse
      - kafka
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  # PostgreSQL Database (OLTP)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=genai_insights
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ClickHouse Data Warehouse (OLAP)
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=changeme
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./data/clickhouse/init:/docker-entrypoint-initdb.d

  # Apache Kafka (Streaming)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
    volumes:
      - kafka_data:/var/lib/kafka/data

  # Apache Airflow (ETL Orchestration)
  airflow-webserver:
    image: apache/airflow:2.7.1
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=your-fernet-key-here
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./data/airflow/dags:/opt/airflow/dags
      - ./data/airflow/logs:/opt/airflow/logs
      - ./data/airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres
      - clickhouse
      - kafka

  airflow-scheduler:
    image: apache/airflow:2.7.1
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=your-fernet-key-here
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./data/airflow/dags:/opt/airflow/dags
      - ./data/airflow/logs:/opt/airflow/logs
      - ./data/airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres
      - clickhouse
      - kafka

  # Grafana (Monitoring & Dashboards)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./data/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - clickhouse

  # Data Ingestion Service
  data-ingestion:
    build: ./data-ingestion
    environment:
      - CLICKHOUSE_URL=clickhouse://clickhouse:9000/default
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/genai_insights
    depends_on:
      - clickhouse
      - kafka
      - postgres
    volumes:
      - ./data-ingestion:/app

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  kafka_data:
  grafana_data:
